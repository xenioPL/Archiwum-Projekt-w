#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
using namespace std ;
vector <vector <int> > graph;
vector <int> seen;
int test;
void  graphs (int wierz,int color)
{
    if(color == 1)
    {
    seen[wierz] = 1;
 for(int i = 0;i<graph[wierz].size();i++)
 {
  if(seen[graph[wierz][i]] == 0)
        graphs(graph[wierz][i],0);
  else
    if(seen[wierz] == seen[graph[wierz][i]]) test++;
 }
    }
    else
    {
        seen[wierz] = 2;
 for(int i = 0;i<graph[wierz].size();i++)
 {
  if(seen[graph[wierz][i]] == 0)
        graphs(graph[wierz][i],1);
  else
    if(seen[wierz] == seen[graph[wierz][i]]) test++;
 }
    }
 }


int main()
{
int n,x,y,m;
long long int suma = 0;
cin>>n>>m;
vector <int> a;
for(int i =0;i<n+1;i++)
{graph.push_back(a);
seen.push_back(0);
}

for(int i = 0;i<m;i++)
{
 cin>>x>>y;
 graph[x].push_back(y);
 graph[y].push_back(x);
}

int mini = 999999;
int maxi = 0;
for(int i = 1;i<graph.size();i++)
{
    if(mini >graph[i].size() )
        mini = graph[i].size();
    if(maxi < graph[i].size())
        maxi = graph[i].size();
}

cout<<mini<<" "<<maxi<<" ";
int licznik = 0;
for(int i =1;i<n+1;i++)
{
    if(seen[i] == 0)
    {
        licznik++;
        graphs(i,0);
    }
}
cout<<licznik<<" ";
if(test != 0) cout<<"N";
else
    cout<<"T";
    return 0;
}
